@model HomeIndexModel
@{
    ViewData["Title"] = "Home Page";
}
<div id="topDisclaimer" class="row">
    <div class="col-md-12">
        <div class="alert alert-warning">
            <span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span>
            <strong>Remember:</strong> finding an AED should <strong>never</strong> take precedence over immediate, high-quality CPR!
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="map" class="img-rounded"></div>
    </div>
</div>
<div id="closeToYou" class="row" data-bind="visible: currentLocation">
    <div class="col-md-12">
        <h2>AEDs close to you</h2>
        <ul></ul>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h2>AEDs in the Map</h2>
        <div id="location"></div>
        <ul data-bind="foreach: aedLocations">
            <li data-bind="text: LocationName"></li>
        </ul>
    </div>
</div>

@section scripts
{
    <script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js'></script>

    <script>
        var map;
        var model = new function viewModel() {
            var that = this;
            this.aedLocations = ko.observableArray(@Json.Serialize(Model.AEDs, new Newtonsoft.Json.JsonSerializerSettings { Formatting = Newtonsoft.Json.Formatting.None, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore })),
            this.currentLocation = ko.observable(null);
            this.closestAEDs = ko.computed(function () {
                if (that.currentLocation()!=null)
                {
                    return ["something"];
                }else
                {
                    return [];
                }
            });
        };
        ko.applyBindings(model);

        function getGeoLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var latitude = position.coords.latitude;
                    var longitude = position.coords.longitude;
                    model.currentLocation({ latitude: latitude, longitude: longitude });
                }, function error(msg) {
                }, { maximumAge: 600000, timeout: 5000, enableHighAccuracy: true });

            } else {
            }
        }

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 35.922337, lng: 14.388411 },
                zoom: 11,
                streetViewControl: false,
                fullscreenControl: true
            });
        }

        $(document).ready(function () {
            getGeoLocation();
        });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDIICHmQFj_9YYByQ9kPEpK9vlQLLgUj7w&libraries=geometry&callback=initMap" async defer></script>
}
